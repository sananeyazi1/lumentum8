<?php
use Drupal\file\Entity\File;
use Drupal\paragraphs\Entity\Paragraph;
use Drupal\Core\Url;
use Drupal\views\Views;
/**
 * @file
 * Functions to support theming in the lumentum theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function lumentum_preprocess_html(array &$variables) {
  /* Add class to html tag */
  //$variables['html_attributes']->addClass('no-js');

  // Don't display the site name twice on the front page (and potentially others)
  /*if (isset($variables['head_title_array']['title']) && isset($variables['head_title_array']['name']) && ($variables['head_title_array']['title'] == $variables['head_title_array']['name'])) {
    $variables['head_title'] = $variables['head_title_array']['name'];
  }*/
}

/**
 * Implements hook_page_attachments_alter().
 */
function lumentum_page_attachments_alter(array &$page) {
  // Tell IE to use latest rendering engine (not to use compatibility mode).
  /*$ie_edge = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
    'http-equiv' => 'X-UA-Compatible',
    'content' => 'IE=edge',
    ],
  ];
  $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function lumentum_preprocess_page(array &$variables) {
  $current_path = \Drupal::service('path.current')->getPath();
  $path_args = explode('/', $current_path);
  $variables['type_of_page'] = $path_args[1];
  /**
   * System important region unset
   */
  if($path_args[1] == 'taxonomy'){
    unset($variables['page']['sys_impo']);
  }
  
  global $base_url;
  if($base_url){
    $changed_base_url = $base_url.'/en';
  }
  $variables['site_url'] = $changed_base_url;
  $site_config = \Drupal::config('system.site');
  $variables['site_name'] = $site_config->get('name');
  $variables['site_logo'] = $base_url.file_url_transform_relative(file_create_url(theme_get_setting('logo.url')));

}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function lumentum_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $suggestions[] = 'page__' . $node->bundle();
  }
}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function lumentum_theme_suggestions_node_alter(array &$suggestions, array $variables) {
//  if ($node = \Drupal::routeMatch()->getParameter('node')) {
//    $suggestions[] = 'node__' . $node->bundle();
//  }
}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function lumentum_preprocess_block(array &$variables) {

}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function lumentum_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  $suggestions[] = 'field__' . $element['#view_mode'];
  $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name'];*/
}

/**
 * Implements hook_preprocess_node().
 */
function lumentum_preprocess_node(array &$variables) {
  // Default to turning off byline/submitted.
  //$variables['display_submitted'] = FALSE;
}

/**
 * Implements hook_preprocess_form().
 */
function lumentum_preprocess_form(array &$variables) {
  //$variables['attributes']['novalidate'] = 'novalidate';
}

function lumentum_preprocess_menu(&$variables) {
//  if($variables['menu_name'] == 'main'){
//    //kint($variables['items']);
//  }
}
